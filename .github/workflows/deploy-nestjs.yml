name: Deploy NestJS Server

on:
  workflow_dispatch: # Trigger manually from GitHub Actions

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

      # Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2
      with:
        region: ${{ secrets.AWS_REGION }}
    - name: Build and push Docker image
      run: |
        # Extract short commit hash for versioning
        COMMIT_HASH=$(git rev-parse --short HEAD)

        # Build and tag the Docker image
        docker build -t bjj-tracker-server:$COMMIT_HASH .
        docker tag bjj-tracker-server:$COMMIT_HASH ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/bjj-tracker-server:$COMMIT_HASH

        # Push the image to ECR
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/bjj-tracker-server:$COMMIT_HASH
      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Render and register ECS task definition
      run: |
        # Replace placeholders in the task definition
        envsubst < aws/nestjs-task-template.json > aws/nestjs-task.json

        # Register the task definition
        aws ecs register-task-definition --cli-input-json file://aws/nestjs-task.json
      env:
        ATLAS_URI: ${{ secrets.ATLAS_URI }}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        VERSION: $COMMIT_HASH

    - name: Update ECS Service
      run: |
        aws ecs update-service \
          --cluster bjj-tracker-cluster \
          --service bjj-tracker-server-service \
          --force-new-deployment